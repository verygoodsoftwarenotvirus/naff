package server

import (
	jen "gitlab.com/verygoodsoftwarenotvirus/naff/forks/jennifer/jen"
	utils "gitlab.com/verygoodsoftwarenotvirus/naff/lib/utils"
	models "gitlab.com/verygoodsoftwarenotvirus/naff/models"
)

func httpRoutesDotGo(proj *models.Project) *jen.File {
	code := jen.NewFile(packageName)

	utils.AddImports(proj, code, false)

	code.Add(
		jen.Var().ID("root").Op("=").Lit("/").Var().ID("auditRoute").Op("=").Lit("/audit").Var().ID("searchRoot").Op("=").Lit("/search").Var().ID("numericIDPattern").Op("=").Lit("{%s:[0-9]+}"),
		jen.Line(),
	)

	code.Add(
		jen.Func().ID("buildNumericIDURLChunk").Params(jen.ID("key").ID("string")).Params(jen.ID("string")).Body(
			jen.Return().Qual("fmt", "Sprintf").Call(
				jen.ID("root").Op("+").ID("numericIDPattern"),
				jen.ID("key"),
			)),
		jen.Line(),
	)

	code.Add(
		jen.Func().Params(jen.ID("s").Op("*").ID("HTTPServer")).ID("setupRouter").Params(jen.ID("ctx").Qual("context", "Context"), jen.ID("router").ID("routing").Dot("Router"), jen.ID("metricsHandler").ID("metrics").Dot("Handler")).Body(
			jen.List(jen.ID("_"), jen.ID("span")).Op(":=").ID("s").Dot("tracer").Dot("StartSpan").Call(jen.ID("ctx")),
			jen.Defer().ID("span").Dot("End").Call(),
			jen.ID("router").Dot("Route").Call(
				jen.Lit("/_meta_"),
				jen.Func().Params(jen.ID("metaRouter").ID("routing").Dot("Router")).Body(
					jen.ID("health").Op(":=").ID("healthcheck").Dot("NewHandler").Call(),
					jen.ID("metaRouter").Dot("Get").Call(
						jen.Lit("/live"),
						jen.ID("health").Dot("LiveEndpoint"),
					),
					jen.ID("metaRouter").Dot("Get").Call(
						jen.Lit("/ready"),
						jen.ID("health").Dot("ReadyEndpoint"),
					),
				),
			),
			jen.If(jen.ID("metricsHandler").Op("!=").ID("nil")).Body(
				jen.ID("s").Dot("logger").Dot("Debug").Call(jen.Lit("establishing metrics handler")),
				jen.ID("router").Dot("HandleFunc").Call(
					jen.Lit("/metrics"),
					jen.ID("metricsHandler").Dot("ServeHTTP"),
				),
			),
			jen.ID("s").Dot("frontendService").Dot("SetupRoutes").Call(jen.ID("router")),
			jen.ID("router").Dot("Post").Call(
				jen.Lit("/paseto"),
				jen.ID("s").Dot("authService").Dot("PASETOHandler"),
			),
			jen.ID("authenticatedRouter").Op(":=").ID("router").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("UserAttributionMiddleware")),
			jen.ID("authenticatedRouter").Dot("Get").Call(
				jen.Lit("/auth/status"),
				jen.ID("s").Dot("authService").Dot("StatusHandler"),
			),
			jen.ID("router").Dot("Route").Call(
				jen.Lit("/users"),
				jen.Func().Params(jen.ID("userRouter").ID("routing").Dot("Router")).Body(
					jen.ID("userRouter").Dot("Post").Call(
						jen.Lit("/login"),
						jen.ID("s").Dot("authService").Dot("BeginSessionHandler"),
					),
					jen.ID("userRouter").Dot("WithMiddleware").Call(
						jen.ID("s").Dot("authService").Dot("UserAttributionMiddleware"),
						jen.ID("s").Dot("authService").Dot("CookieRequirementMiddleware"),
					).Dot("Post").Call(
						jen.Lit("/logout"),
						jen.ID("s").Dot("authService").Dot("EndSessionHandler"),
					),
					jen.ID("userRouter").Dot("Post").Call(
						jen.ID("root"),
						jen.ID("s").Dot("usersService").Dot("CreateHandler"),
					),
					jen.ID("userRouter").Dot("Post").Call(
						jen.Lit("/totp_secret/verify"),
						jen.ID("s").Dot("usersService").Dot("TOTPSecretVerificationHandler"),
					),
					jen.ID("authedRouter").Op(":=").ID("userRouter").Dot("WithMiddleware").Call(
						jen.ID("s").Dot("authService").Dot("UserAttributionMiddleware"),
						jen.ID("s").Dot("authService").Dot("AuthorizationMiddleware"),
					),
					jen.ID("authedRouter").Dot("Post").Call(
						jen.Lit("/account/select"),
						jen.ID("s").Dot("authService").Dot("ChangeActiveAccountHandler"),
					),
					jen.ID("authedRouter").Dot("Post").Call(
						jen.Lit("/totp_secret/new"),
						jen.ID("s").Dot("usersService").Dot("NewTOTPSecretHandler"),
					),
					jen.ID("authedRouter").Dot("Put").Call(
						jen.Lit("/password/new"),
						jen.ID("s").Dot("usersService").Dot("UpdatePasswordHandler"),
					),
				),
			),
			jen.ID("authenticatedRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("AuthorizationMiddleware")).Dot("Route").Call(
				jen.Lit("/api/v1"),
				jen.Func().Params(jen.ID("v1Router").ID("routing").Dot("Router")).Body(
					jen.ID("adminRouter").Op(":=").ID("v1Router").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("ServiceAdminMiddleware")),
					jen.ID("adminRouter").Dot("Route").Call(
						jen.Lit("/admin"),
						jen.Func().Params(jen.ID("adminRouter").ID("routing").Dot("Router")).Body(
							jen.ID("adminRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("CycleCookieSecretPermission"))).Dot("Post").Call(
								jen.Lit("/cycle_cookie_secret"),
								jen.ID("s").Dot("authService").Dot("CycleCookieSecretHandler"),
							),
							jen.ID("adminRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("UpdateUserStatusPermission"))).Dot("Post").Call(
								jen.Lit("/users/status"),
								jen.ID("s").Dot("adminService").Dot("UserReputationChangeHandler"),
							),
							jen.ID("adminRouter").Dot("Route").Call(
								jen.Lit("/audit_log"),
								jen.Func().Params(jen.ID("auditRouter").ID("routing").Dot("Router")).Body(
									jen.ID("entryIDRouteParam").Op(":=").ID("buildNumericIDURLChunk").Call(jen.ID("audit").Dot("LogEntryURIParamKey")),
									jen.ID("auditRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadAllAuditLogEntriesPermission"))).Dot("Get").Call(
										jen.ID("root"),
										jen.ID("s").Dot("auditService").Dot("ListHandler"),
									),
									jen.ID("auditRouter").Dot("Route").Call(
										jen.ID("entryIDRouteParam"),
										jen.Func().Params(jen.ID("singleEntryRouter").ID("routing").Dot("Router")).Body(
											jen.ID("singleEntryRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadAllAuditLogEntriesPermission"))).Dot("Get").Call(
												jen.ID("root"),
												jen.ID("s").Dot("auditService").Dot("ReadHandler"),
											)),
									),
								),
							),
						),
					),
					jen.ID("v1Router").Dot("Route").Call(
						jen.Lit("/users"),
						jen.Func().Params(jen.ID("usersRouter").ID("routing").Dot("Router")).Body(
							jen.ID("usersRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadUserPermission"))).Dot("Get").Call(
								jen.ID("root"),
								jen.ID("s").Dot("usersService").Dot("ListHandler"),
							),
							jen.ID("usersRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("SearchUserPermission"))).Dot("Get").Call(
								jen.Lit("/search"),
								jen.ID("s").Dot("usersService").Dot("UsernameSearchHandler"),
							),
							jen.ID("usersRouter").Dot("Post").Call(
								jen.Lit("/avatar/upload"),
								jen.ID("s").Dot("usersService").Dot("AvatarUploadHandler"),
							),
							jen.ID("usersRouter").Dot("Get").Call(
								jen.Lit("/self"),
								jen.ID("s").Dot("usersService").Dot("SelfHandler"),
							),
							jen.ID("singleUserRoute").Op(":=").ID("buildNumericIDURLChunk").Call(jen.ID("users").Dot("UserIDURIParamKey")),
							jen.ID("usersRouter").Dot("Route").Call(
								jen.ID("singleUserRoute"),
								jen.Func().Params(jen.ID("singleUserRouter").ID("routing").Dot("Router")).Body(
									jen.ID("singleUserRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadUserPermission"))).Dot("Get").Call(
										jen.ID("root"),
										jen.ID("s").Dot("usersService").Dot("ReadHandler"),
									),
									jen.ID("singleUserRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadUserAuditLogEntriesPermission"))).Dot("Get").Call(
										jen.ID("auditRoute"),
										jen.ID("s").Dot("usersService").Dot("AuditEntryHandler"),
									),
									jen.ID("singleUserRouter").Dot("Delete").Call(
										jen.ID("root"),
										jen.ID("s").Dot("usersService").Dot("ArchiveHandler"),
									),
								),
							),
						),
					),
					jen.ID("v1Router").Dot("Route").Call(
						jen.Lit("/accounts"),
						jen.Func().Params(jen.ID("accountsRouter").ID("routing").Dot("Router")).Body(
							jen.ID("accountsRouter").Dot("Post").Call(
								jen.ID("root"),
								jen.ID("s").Dot("accountsService").Dot("CreateHandler"),
							),
							jen.ID("accountsRouter").Dot("Get").Call(
								jen.ID("root"),
								jen.ID("s").Dot("accountsService").Dot("ListHandler"),
							),
							jen.ID("singleUserRoute").Op(":=").ID("buildNumericIDURLChunk").Call(jen.ID("accounts").Dot("UserIDURIParamKey")),
							jen.ID("singleAccountRoute").Op(":=").ID("buildNumericIDURLChunk").Call(jen.ID("accounts").Dot("AccountIDURIParamKey")),
							jen.ID("accountsRouter").Dot("Route").Call(
								jen.ID("singleAccountRoute"),
								jen.Func().Params(jen.ID("singleAccountRouter").ID("routing").Dot("Router")).Body(
									jen.ID("singleAccountRouter").Dot("Get").Call(
										jen.ID("root"),
										jen.ID("s").Dot("accountsService").Dot("ReadHandler"),
									),
									jen.ID("singleAccountRouter").Dot("Put").Call(
										jen.ID("root"),
										jen.ID("s").Dot("accountsService").Dot("UpdateHandler"),
									),
									jen.ID("singleAccountRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ArchiveAccountPermission"))).Dot("Delete").Call(
										jen.ID("root"),
										jen.ID("s").Dot("accountsService").Dot("ArchiveHandler"),
									),
									jen.ID("singleAccountRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadAccountAuditLogEntriesPermission"))).Dot("Get").Call(
										jen.ID("auditRoute"),
										jen.ID("s").Dot("accountsService").Dot("AuditEntryHandler"),
									),
									jen.ID("singleAccountRouter").Dot("Post").Call(
										jen.Lit("/default"),
										jen.ID("s").Dot("accountsService").Dot("MarkAsDefaultAccountHandler"),
									),
									jen.ID("singleAccountRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("RemoveMemberAccountPermission"))).Dot("Delete").Call(
										jen.Lit("/members").Op("+").ID("singleUserRoute"),
										jen.ID("s").Dot("accountsService").Dot("RemoveMemberHandler"),
									),
									jen.ID("singleAccountRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("AddMemberAccountPermission"))).Dot("Post").Call(
										jen.Lit("/member"),
										jen.ID("s").Dot("accountsService").Dot("AddMemberHandler"),
									),
									jen.ID("singleAccountRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ModifyMemberPermissionsForAccountPermission"))).Dot("Patch").Call(
										jen.Lit("/members").Op("+").ID("singleUserRoute").Op("+").Lit("/permissions"),
										jen.ID("s").Dot("accountsService").Dot("ModifyMemberPermissionsHandler"),
									),
									jen.ID("singleAccountRouter").Dot("Post").Call(
										jen.Lit("/transfer"),
										jen.ID("s").Dot("accountsService").Dot("TransferAccountOwnershipHandler"),
									),
								),
							),
						),
					),
					jen.ID("v1Router").Dot("Route").Call(
						jen.Lit("/api_clients"),
						jen.Func().Params(jen.ID("clientRouter").ID("routing").Dot("Router")).Body(
							jen.ID("clientRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadAPIClientsPermission"))).Dot("Get").Call(
								jen.ID("root"),
								jen.ID("s").Dot("apiClientsService").Dot("ListHandler"),
							),
							jen.ID("clientRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("CreateAPIClientsPermission"))).Dot("Post").Call(
								jen.ID("root"),
								jen.ID("s").Dot("apiClientsService").Dot("CreateHandler"),
							),
							jen.ID("singleClientRoute").Op(":=").ID("buildNumericIDURLChunk").Call(jen.ID("apiclients").Dot("APIClientIDURIParamKey")),
							jen.ID("clientRouter").Dot("Route").Call(
								jen.ID("singleClientRoute"),
								jen.Func().Params(jen.ID("singleClientRouter").ID("routing").Dot("Router")).Body(
									jen.ID("singleClientRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadAPIClientsPermission"))).Dot("Get").Call(
										jen.ID("root"),
										jen.ID("s").Dot("apiClientsService").Dot("ReadHandler"),
									),
									jen.ID("singleClientRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ArchiveAPIClientsPermission"))).Dot("Delete").Call(
										jen.ID("root"),
										jen.ID("s").Dot("apiClientsService").Dot("ArchiveHandler"),
									),
									jen.ID("singleClientRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadAPIClientAuditLogEntriesPermission"))).Dot("Get").Call(
										jen.ID("auditRoute"),
										jen.ID("s").Dot("apiClientsService").Dot("AuditEntryHandler"),
									),
								),
							),
						),
					),
					jen.ID("v1Router").Dot("Route").Call(
						jen.Lit("/webhooks"),
						jen.Func().Params(jen.ID("webhookRouter").ID("routing").Dot("Router")).Body(
							jen.ID("singleWebhookRoute").Op(":=").ID("buildNumericIDURLChunk").Call(jen.ID("webhooks").Dot("WebhookIDURIParamKey")),
							jen.ID("webhookRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadWebhooksPermission"))).Dot("Get").Call(
								jen.ID("root"),
								jen.ID("s").Dot("webhooksService").Dot("ListHandler"),
							),
							jen.ID("webhookRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("CreateWebhooksPermission"))).Dot("Post").Call(
								jen.ID("root"),
								jen.ID("s").Dot("webhooksService").Dot("CreateHandler"),
							),
							jen.ID("webhookRouter").Dot("Route").Call(
								jen.ID("singleWebhookRoute"),
								jen.Func().Params(jen.ID("singleWebhookRouter").ID("routing").Dot("Router")).Body(
									jen.ID("singleWebhookRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadWebhooksPermission"))).Dot("Get").Call(
										jen.ID("root"),
										jen.ID("s").Dot("webhooksService").Dot("ReadHandler"),
									),
									jen.ID("singleWebhookRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ArchiveWebhooksPermission"))).Dot("Delete").Call(
										jen.ID("root"),
										jen.ID("s").Dot("webhooksService").Dot("ArchiveHandler"),
									),
									jen.ID("singleWebhookRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("UpdateWebhooksPermission"))).Dot("Put").Call(
										jen.ID("root"),
										jen.ID("s").Dot("webhooksService").Dot("UpdateHandler"),
									),
									jen.ID("singleWebhookRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadWebhooksAuditLogEntriesPermission"))).Dot("Get").Call(
										jen.ID("auditRoute"),
										jen.ID("s").Dot("webhooksService").Dot("AuditEntryHandler"),
									),
								),
							),
						),
					),
					jen.ID("itemPath").Op(":=").Lit("items"),
					jen.ID("itemsRouteWithPrefix").Op(":=").Qual("fmt", "Sprintf").Call(
						jen.Lit("/%s"),
						jen.ID("itemPath"),
					),
					jen.ID("itemIDRouteParam").Op(":=").ID("buildNumericIDURLChunk").Call(jen.ID("items").Dot("ItemIDURIParamKey")),
					jen.ID("v1Router").Dot("Route").Call(
						jen.ID("itemsRouteWithPrefix"),
						jen.Func().Params(jen.ID("itemsRouter").ID("routing").Dot("Router")).Body(
							jen.ID("itemsRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("CreateItemsPermission"))).Dot("Post").Call(
								jen.ID("root"),
								jen.ID("s").Dot("itemsService").Dot("CreateHandler"),
							),
							jen.ID("itemsRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadItemsPermission"))).Dot("Get").Call(
								jen.ID("root"),
								jen.ID("s").Dot("itemsService").Dot("ListHandler"),
							),
							jen.ID("itemsRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadItemsPermission"))).Dot("Get").Call(
								jen.ID("searchRoot"),
								jen.ID("s").Dot("itemsService").Dot("SearchHandler"),
							),
							jen.ID("itemsRouter").Dot("Route").Call(
								jen.ID("itemIDRouteParam"),
								jen.Func().Params(jen.ID("singleItemRouter").ID("routing").Dot("Router")).Body(
									jen.ID("singleItemRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadItemsPermission"))).Dot("Get").Call(
										jen.ID("root"),
										jen.ID("s").Dot("itemsService").Dot("ReadHandler"),
									),
									jen.ID("singleItemRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadItemsPermission"))).Dot("Head").Call(
										jen.ID("root"),
										jen.ID("s").Dot("itemsService").Dot("ExistenceHandler"),
									),
									jen.ID("singleItemRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ArchiveItemsPermission"))).Dot("Delete").Call(
										jen.ID("root"),
										jen.ID("s").Dot("itemsService").Dot("ArchiveHandler"),
									),
									jen.ID("singleItemRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("UpdateItemsPermission"))).Dot("Put").Call(
										jen.ID("root"),
										jen.ID("s").Dot("itemsService").Dot("UpdateHandler"),
									),
									jen.ID("singleItemRouter").Dot("WithMiddleware").Call(jen.ID("s").Dot("authService").Dot("PermissionFilterMiddleware").Call(jen.ID("authorization").Dot("ReadItemsAuditLogEntriesPermission"))).Dot("Get").Call(
										jen.ID("auditRoute"),
										jen.ID("s").Dot("itemsService").Dot("AuditEntryHandler"),
									),
								),
							),
						),
					),
				),
			),
			jen.ID("s").Dot("router").Op("=").ID("router"),
		),
		jen.Line(),
	)

	return code
}
