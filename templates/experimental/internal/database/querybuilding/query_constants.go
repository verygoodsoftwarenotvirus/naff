package querybuilding

import (
	jen "gitlab.com/verygoodsoftwarenotvirus/naff/forks/jennifer/jen"
	utils "gitlab.com/verygoodsoftwarenotvirus/naff/lib/utils"
	models "gitlab.com/verygoodsoftwarenotvirus/naff/models"
)

func queryConstantsDotGo(proj *models.Project) *jen.File {
	code := jen.NewFile(packageName)

	utils.AddImports(proj, code, false)

	code.Add(
		jen.Var().ID("DefaultTestUserTwoFactorSecret").Op("=").Lit("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=").Var().ID("ExistencePrefix").Op("=").Lit("SELECT EXISTS (").Var().ID("ExistenceSuffix").Op("=").Lit(")").Var().ID("IDColumn").Op("=").Lit("id").Var().ID("ExternalIDColumn").Op("=").Lit("external_id").Var().ID("CreatedOnColumn").Op("=").Lit("created_on").Var().ID("LastUpdatedOnColumn").Op("=").Lit("last_updated_on").Var().ID("ArchivedOnColumn").Op("=").Lit("archived_on").Var().ID("commaSeparator").Op("=").Lit(",").Var().ID("userOwnershipColumn").Op("=").Lit("belongs_to_user").Var().ID("accountOwnershipColumn").Op("=").Lit("belongs_to_account").Var().ID("AccountsTableName").Op("=").Lit("accounts").Var().ID("AccountsTableNameColumn").Op("=").Lit("name").Var().ID("AccountsTableBillingStatusColumn").Op("=").Lit("billing_status").Var().ID("AccountsTableContactEmailColumn").Op("=").Lit("contact_email").Var().ID("AccountsTableContactPhoneColumn").Op("=").Lit("contact_phone").Var().ID("AccountsTablePaymentProcessorCustomerIDColumn").Op("=").Lit("payment_processor_customer_id").Var().ID("AccountsTableSubscriptionPlanIDColumn").Op("=").Lit("subscription_plan_id").Var().ID("AccountsTableUserOwnershipColumn").Op("=").ID("userOwnershipColumn").Var().ID("AccountsUserMembershipTableName").Op("=").Lit("account_user_memberships").Var().ID("AccountsUserMembershipTableAccountRolesColumn").Op("=").Lit("account_roles").Var().ID("AccountsUserMembershipTableAccountOwnershipColumn").Op("=").ID("accountOwnershipColumn").Var().ID("AccountsUserMembershipTableUserOwnershipColumn").Op("=").ID("userOwnershipColumn").Var().ID("AccountsUserMembershipTableDefaultUserAccountColumn").Op("=").Lit("default_account").Var().ID("UsersTableName").Op("=").Lit("users").Var().ID("UsersTableUsernameColumn").Op("=").Lit("username").Var().ID("UsersTableHashedPasswordColumn").Op("=").Lit("hashed_password").Var().ID("UsersTableRequiresPasswordChangeColumn").Op("=").Lit("requires_password_change").Var().ID("UsersTablePasswordLastChangedOnColumn").Op("=").Lit("password_last_changed_on").Var().ID("UsersTableTwoFactorSekretColumn").Op("=").Lit("two_factor_secret").Var().ID("UsersTableTwoFactorVerifiedOnColumn").Op("=").Lit("two_factor_secret_verified_on").Var().ID("UsersTableServiceRolesColumn").Op("=").Lit("service_roles").Var().ID("UsersTableReputationColumn").Op("=").Lit("reputation").Var().ID("UsersTableStatusExplanationColumn").Op("=").Lit("reputation_explanation").Var().ID("UsersTableAvatarColumn").Op("=").Lit("avatar_src").Var().ID("AuditLogEntriesTableName").Op("=").Lit("audit_log").Var().ID("AuditLogEntriesTableEventTypeColumn").Op("=").Lit("event_type").Var().ID("AuditLogEntriesTableContextColumn").Op("=").Lit("context").Var().ID("APIClientsTableName").Op("=").Lit("api_clients").Var().ID("APIClientsTableNameColumn").Op("=").Lit("name").Var().ID("APIClientsTableClientIDColumn").Op("=").Lit("client_id").Var().ID("APIClientsTableSecretKeyColumn").Op("=").Lit("secret_key").Var().ID("APIClientsTableOwnershipColumn").Op("=").ID("userOwnershipColumn").Var().ID("WebhooksTableName").Op("=").Lit("webhooks").Var().ID("WebhooksTableNameColumn").Op("=").Lit("name").Var().ID("WebhooksTableContentTypeColumn").Op("=").Lit("content_type").Var().ID("WebhooksTableURLColumn").Op("=").Lit("url").Var().ID("WebhooksTableMethodColumn").Op("=").Lit("method").Var().ID("WebhooksTableEventsColumn").Op("=").Lit("events").Var().ID("WebhooksTableEventsSeparator").Op("=").ID("commaSeparator").Var().ID("WebhooksTableDataTypesColumn").Op("=").Lit("data_types").Var().ID("WebhooksTableDataTypesSeparator").Op("=").ID("commaSeparator").Var().ID("WebhooksTableTopicsColumn").Op("=").Lit("topics").Var().ID("WebhooksTableTopicsSeparator").Op("=").ID("commaSeparator").Var().ID("WebhooksTableOwnershipColumn").Op("=").ID("accountOwnershipColumn").Var().ID("ItemsTableName").Op("=").Lit("items").Var().ID("ItemsTableNameColumn").Op("=").Lit("name").Var().ID("ItemsTableDetailsColumn").Op("=").Lit("details").Var().ID("ItemsTableAccountOwnershipColumn").Op("=").ID("accountOwnershipColumn"),
		jen.Line(),
	)

	return code
}
